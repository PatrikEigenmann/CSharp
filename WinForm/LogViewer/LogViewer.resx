<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADdHAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAHKRJ
        REFUeNrtnXmUH1WVxz+9dyeddNbubISwBgIIUTAsyqrODIrHBYdRccFlcMPRQUc9iBvOmXEER2fGo44L
        rjMuoMKAHkdAQByURQj7nn3rhJBOL+kkvcwf91W6uulO+vf71Xv1q6rv55x76teQ7qrffe/eest994IQ
        QgghhBBCCCGEEEIIIYQQQgghhBBCCCGyS41UUNXUxaR+zLXWXRuAJqDRXeOfa2K/wzif69znQScAA+N8
        HgZ2A3vcNf55r/s3Q+46MOYa/9tCDqCQ1DtDbXTXBqAFmB6TNnedBrQCU4Cp7hr/HF0jI4+cQW3MKUSf
        ozaOf64Z5/Owk7Gfh8Z8HooZe/znyCH0Ab0TXPuAHqAb2Al0uWsku5wziWSPcyJCDqBqaQCanSG2ADOB
        2e46KyYzY9cZztCnut+vjzmFhpix5pWhMYY+4K59zil0Ac8B22My3s/9jIxGdscclZADSIR6Z9zN2Bu5
        w0k7MMcZ+hz381z3uZWRN30jI8NtURkD2Ihgj3MW/c4JdAJbnWyJ/bzZfe51zmGX+10hB7CPWmfcLdiw
        ez6wEFjgDLrDfY6Mfiojb3sZdvU6it3OQezCRgudwEbnFDY62QBswqYk0b8t5HQj7w6gBpsvt2BD70XA
        QU4WOFkIzMPe3i3OyDUyyifDMYPvA7bFHMLamKzHpiLR2kVupxd56ej1ztBbsbf1wcChwCHO2Bdjb/L4
        ApoQY4kvZHY6Z7DOyWonG7CRQy85GDVk0QFMwYbsHcBhwOHAEc7YF2MLbdFquRBJEY0atgNrgFUxeco5
        hm7nGDIzYqhmB1DvDH0u9jY/zBn5oc7oOxjZLhMiLfqxEcE24BnnDJ5011Xuv3dTpYuQ1eIAGpyxz3HG
        fTSw1F2XYHvkU8n/FpnIB0PYSKAbW094DHgUeNzJFiz2YW+RHUA7cCxwAnAMsAwbwk/H3uxC5I0o1mEt
        8LCT+4GHsDWHQjiAI4ELgFdjc/c29QtRYLqwKcN1wE/c51zSDFyEebthiUTyPHkIeIezlSDUBbrPNOBy
        4DPYvrsQ4vm0Ay/D4lHuxoKaMu8AmoDLgEvdFxNCTEwjsMJ9/gOeT1KGcAAXAFeg7TohSrHL5cDT2LQg
        sw5gEfBlbP9eCDF5mrBdsV9jW4Ze8L2v/ipsm08IUTrLgVf6vIFPBzAN2+rTyTkhyqMeOA+PcTE+HcAy
        4ES1oRAVcRIWEZs5B3AWFscvhCifdmdLmXIA04Ez1XZCJMJZ2JQ6Mw7gCGwBQwhROcuxEPrMOIAz0PBf
        iKRoB07PigOYig3/lVZLiGSowaYBiSe58eEADkbDfyGSZrmzrap3ACuwbD1CiOToAE6udgfQAJzmrkKI
        KretpB3AHEZOMgkhkuXFJLy4nrQDOBY7wCCESJ7FWPq8qnUAK7AgICFE8kwn4XWAJB1AKxr+C+Gbk0nw
        cFCSDmAecJzaRwivHIuVtKs6B3A8FrEkhPDHXGdrVecAXoRy/gnhmxZna1XlAKajs/9ChOJEEqqnkZQD
        mI/HpAVCiFEc5WyuahzAscBstYsQQZhFQgvuSTmA49H8X4hQtJDQQmASDmAqCa5KCiEmxQkkEA+QhAOY
        gyUAFUKEYxkJnAtIwgEcifb/hQjNHGBpNTiAY/CUsFAIMSHTSOBgUKUOoB4biij9lxDhWUaF+QEqdQDT
        Sfh4ohBi0hxDhadvK3UA81DhTyHS4mAqDAiq1AEcRUIhiUKIkmlzNpiaA1gKTFE7CJEKLVS4E1CJA2jA
        KgAJIdLjSKAxDQfQiqdyRUKIkhxA2RGB9RXceDYeChUIAIaALqAX2IONtqZiK771Vf7se4Gd7tn3Ak3u
        2dvwW426qCzGIgK3h3YAh6MFwKTpAe4AfgP8GVgH9DsHsAA7c/EyrPTanCp79k7gFuBm4AFgEzDgHMAi
        LInFX2K57RU4lhzTnS0+HvrGl2BvqmFJxTII3A68jgPv67ZgdeJ+iY0O0n72PcA1wEuB5kl01tcBt7nv
        rLavXIaAD6Xheb4k5ScincA/AgtL1P9M4HPYqCGtZ98JfAaYUeKzzweuALao/RORrxA4Gncq8AspvuK3
        /q3AK4C6MtuhCfgUNk0I/fy7gE9Q/gp0HfBybMqg0UBlch0eKgfvj3bgfim+bNkKfJZk0jpNA36Qwne4
        OqFON8/polP9omx5gMAFeZdhizxSfulyD3BeBW/98VgOrAr4HZ4CXpDg89cBrwLuVv8oSzZjafmCcS7Q
        LcWXJP3A9/ATO1ELfDngd/kifuacRwDfxaYX6jOTl27nQMvqOOVwCAoBLoUNwMeBDwBPePj7Q8CvXEfw
        TRfwa9fxkuZJp6OPOZ2JyTGVMg/llesAFqOgjslyD3AR9ob2aaAPY9My32wEHvX493uAfwfe7nQnDkwN
        cFAoB9BE6VtWRWQQ+DnwVuC3Ae7XA6wPcJ91WJSfT4aBm4C3ANc6XYr9s4gDx2Ek4gBa3M3E/o3xKuBi
        /L4t4wy4+4b4bgOBvtNjwHucLnsQ+2MhZaTmL8cBTCHB6qQ5pBObw34K2BbwvnWU8QYog2bCTv+2OV1+
        zOlWjM8CyliXK6ch51J65FdReAZbxPo6sDvwvVtIqFyUj45WIbudTt8HPK1uNi5tlJGduxwHsAhVARqP
        e4F3Aj/DVuVDcyhh1mYWAUtS+H5D2HrAO52uxWhaymn/chzAQsIMNbPEzdhK/60pPsM5WM0438x290qL
        24B3YCcPRQoOoIPqP5MekhuwhaoHU3yGg4HXB7pXjbvXQSl+3wewBdYb1P32UUcZ4cC1Zfx7VQEyhoGf
        Au/HQmPTbPh3kWxo7oFYjg3F61L83k9hawI/xU9QUhZpx/MCbQvwExR6OYiFrM6rgka/AFspD62DbcBf
        V8H3n4eFWOtEoTlDr+tzM4Dfyfi5mvQz8tQ5A1yboi7WOAdUl7Iu5soJMIytQc3wqegOLOS0qAoewt78
        c0mXDiwRx7Yq0Mk2kjvaXAntwPcL7gQewfOo9HDskEZRjf/7pLsGUo8lELkZi8arFt0MuLfPX5DuAnE7
        lhuhqKnqNuI5Vf+pwLMFVe5PSXfOPx9LHVbNiTOi9GbzU9bTNQXto886G/XGeRQzD8CNpJcCvQY4HTsc
        k4Xh7SC2R3826VWNXuzaTHkBEuYtWFhmkZT6O9IrgNIK/B12Ai9retsA/D3ppQBfigUNFamv9gMX+lRq
        0VKB3weckFIHPgzbbchydpwoC9LhKenwhRQrd+WQs1FvXF4gZa4ivZDX07ECIXnR5Z1YLYM0OAc7pFWU
        fnu5T2VeVRAldmL726FpxOLcV+dQp2ux6MHGFPR6AZaJuQh99ypfSmwAvl0ABfZhlVZCpzybDnway7mX
        V93uxIqZtAXWbR22HtFXgP77bWeriTMFO46ZZ+UNYrn7Qh93XuAarhpKffmWPcB3CJ9WbgpWQSfvgULX
        4ilfQxu2FZVn5f2C8IE+S4HrC2D4Y+V6wu+udGBVdPKs15vwNMKajS3m5HnF/5jAHfIErCho0Yw/ktux
        k4UhOQ5YmWOd/h+e8kK051hxm4FXBu6IK4A/Fdj4I7kHOCWw7s8jv4VJ78fTKHY+VrghbwrbDXyUsIt+
        L0W1FeOyEjgjoP5rsSSjeQxqewJPodiLyWZE2oHkx4RdlX4ZdmpLhj9aHsWqBYdiBiPJRPIk6/CUrWkp
        +SsI+jA2JwzFWViuexn8+PI4doYgFC8AHsqZDjfhaXF1Ofkq4bwDeGPAzvaSHHY2X075pQHb5Y3kK/ai
        E0/h66eRn6PAQ1jEVKiotBVozl/qQtaKQG3TBPxrjnTn7UjwOe6tmQcl3YmtaYTgOOAuGXXJchdwfKA2
        WkJ+dmR2UMI0qpSV73ryURF4B/AvWGx6iI71JeCkHOgtNCdho7RDAtxrtesTXTnQWw0lZGUq1QHUZE4d
        z+dHwK8C3Gcu8AVs1V+UxzlOhyGiM29wfaNQDqAUXo1VaM3y8OgR4KgAjdAK/AfKUpuEDAJfBaYGaLej
        yP4WbTcW6DQpShkB1JHtEcAQlpziMc/3qcMKVryLfEyZ0qYWOyL9AfynH38MS/w6VO1K2Q81peipSFOA
        tcAvA9zn9cA/YKvLIhmanU7PD3CvX2LBNFmlFk9rAFkfAdyFFbLwycnA57GDUyJZZgFXOB37ZA1wd4b1
        5G0EkHUH8DCWo84XC53xH5ENdWSSI5yOfeYS2IWtA2TZAXgZAdRm2AEMYhFSvmgBPkHYMNaicjbwcfwm
        bekku+sANaXYdSkOIMoGnEWGseo1vpiGBa3kYZs0Cx38OPzuCgxkvK9P2nmV4gAGM6yUeiznni+iijib
        ZZ/e2eh0vc3jPdpIv+BpJQ5g0i+7UhxAlr0iWJ59n9ty/4tFk/VnQx2ZZBcWGHSTx3vUAYdmWEdR7ETi
        DiDLIwCAE/G7Oj8E/CeW8DLLeqpWhrDEqd/yrN85rq9kWU9eRgBZdwDL8Fw4EejFVql/LXtNnBudbvs8
        3+c04OgM68nbCGCAbEdItQIX4XctACwhwyewI60iGe51Ot3i+T5tro9MqXqNpOAAsj4CAHgFFqnnmweA
        S7HyYqIyngY+gsVx+OZ80isHl6QD8LLjlZd8AA9g6c1CcD75zT4bKr3VawO11dHAgznQ2Q48xaOcBmzP
        Scf6OhZf7pta4GLyXe7LZ0d+F2FiK1qwBVxlBNoPecoJ2EW44p+NWArqrB+lDik92BSqIVAbvQmrW5gH
        3XnLCZi3rMArCVcJqBn4FMUoTlmp9AKfJNxpymXYtDBP0yYvWYHzWBfgv/C/KxAxBYtg65eRTyj9WPXg
        UMVZ21wfyJMO1+KpLkAeKwP1Ax8mXAx/KyPRgjL40bIL+CfCZP7Btfml5K86kLfKQHmtDbgOOJNwtLq3
        nKYDo4f9nwto/GBFWtbnUJf3Y/koEyfP1YFvxzL4hqIFuAzL31Z049+J/+O9Y1kC/D6n+vRWHbgNO4SR
        1474bfd2DkUjNv3YUWDjfw74EOEKtIAd3f5OjnX6WzzVupwC/DzHiuvHIs5CJvJsAN5N/mouTkY2Ysk+
        6wPquw7LLZjnNZhr8BTK3ODeknnulJ2ECRWOU4OlXH+0QMb/BPAawidQOR/YmnPdftOnU72qAJ3zcfwn
        nhyPk4E7CqDfO7FCqaE5xbVt3vX7RZ9KvLwgb6jbsAQioVkK/IJ8FhQZwIanR6ag18Oxhd4i9N3LfCry
        g4zkBsy7XAN0pNBZ24ErydcOQbd7M81JQZ8dwLUF6bODwPt9KvMt5C9wYiIZAr6GrRqHphk7CLM6B3p8
        BngnYQ5fjWU6dvCrKCXa+oE3+1ToeTl7Mx1IdmMBKml0XrC58s1kc9Q1hG0bn5qS7pqxDEJFeWENYzEV
        5/pUap6OBE9WerDtwVAn08ayCFt8fS5DOtuBTWMWpKSzBmy7r7dgfXUbsMKnYo/E9m+LpNSoQ7+X9Ip9
        NgJvAO7LgK7uw7bbGlPSVa1rqyLmYFiP58XreRRrvzouW4G3km7xj6XAN6q0c+/ASqKnWRqtBni7exMW
        sY8+hOeF6xnYFlkRlTuMpfe6MGUn0OxGA/dUkV7uwgKo0qyIXIstUhc5BdvNeAoDjmgBflZgBQ9j1X/S
        dgJge9s/ZKRgSxoyAPyAdGImxr75Lyy48Q8DP8bzgnUt8NWCK3kYi91/M+mtCUTMAb6Xkg6GgKtJvxR6
        rTP+zeqX/FuIF9Onpeh904F3kH4NuYOBP6Tw/e/AskSlST0WL6HMyyafDKH095DusLOaZDtwCemteEe8
        nrDxGTsJl657IhqxyNSibUtPJHudM/RO0YKBJmMMoRNajGU6Vo4s1He+kXQiJCOasUzLecnkm1Q//KsQ
        ys9TevCkpA/L9TczRaO4hDAjswE8x5sfgJnAP1O8IJ/JTEmPC9EAC4GnpPBxh2DfxSL30uDFhNn/3gqc
        lNJ3XOR0vFf97XnyGGUkAy1nFbsPiwYUo6kH3oYF6ixL4f7rsKowvtnm7hWaY5xu30bYLEJZYSNlVE4u
        xwHswkIOxfici+WcOzPwfXdjC2K+2Q7sCfzdzsa2HM9FTMR6Z5veHUA/sEH63i8rsKHqRYTdIRgOdI/h
        QN+nCdtqvZr0ph1ZcgAlO+Zyh1JRhaC0o+GqmYOBL2MRe1/C//C8EQvV9s0Mwji12dgpzPeT7o5DFhjE
        KgKVTLmRbKuwVVixf6Zj21Vfx38dwkV4KggxhnZsIdgny5zOPirjnxR9ziaDOYDVcgCTpg47HvvfWMCO
        r7wCpxJmG3IWlmDTB/XA64AfOZ2lHWWZFXqANSFv2EG+KqqGjBz8PMm/qWcDtwT8HjeRfPWZduAKbKqk
        vlKa/Jkwo799tALXS/FlB9LcgO3bJ8UHCVvsop9kg4FWYNGFRcndl7Rci6diIBNRA3xFiq9IVmGlwWZU
        2BZnYcO/0M+/Gjijwmef6XTwjPpDRXIlKfAhipMi3JfsxuoAlFuI5CTg3hSf/27gxDJfIKcA12FbV+oL
        5csg8L40HMAr0aGgJN+mH8HmwZOhDjv4cV8VPPtK9yyTXbBrx1b316jdE5Eu4OVpOIClWECQGiEZ2YOl
        W7sYix0Yb043FTuMdSXVdQZ+M3YY6oQJnnsKlivwvViFHr31k5O1VJCRqZJAnlnYwk0adfTyzAAWaLUS
        S8AaHfCZi8USnEh66bYPxAYsV+HD7rlrsKxFy4DjsVgFxfEny++x4rI7QjuARqwS6VvVBkKkxrewkdVA
        Ob9cSU67PViZZyFEejxZrvFX6gBwDmBXValDiOLQi5U8L5tKHcCj2CqkECI8O7BEIKk5gE0EjkEWQuzj
        GSw9X2oOYCe24iuECM8jzgZTcwB75QCESIVh5wAG03QAOAfQrfYQIiiJjL6TcACPY5lihRDh6MS2AFN3
        ANuw3QAhRDiiaMvUHUAPcL/aQ4igrKSMNOA+HED0MAoIEiIMfST00k3KATxEmJz0Qggb+iey+5aUA9hI
        hRFJQohJ8wh2BLtqHEAXlplGCOGfe0lo6702wYe6B60DCOGbPmdriZCkA1iJ4gGE8E0n8GA1OoCN2GKg
        EMIfD5DQ/D9pB9AD/FHtI4RX/kSCVblqPTzcToQQPugi4Zds0g7gIcqsUiqEOCCrsS3AqnUAW4G71E5C
        eOEuEoj/9+kA9gJ3uKsQIjn2ONsaSPKP1np40D+S4CqlEAKcTSU+uvbhANZiJauEEMnxZzysr/lwAL3A
        rVjKIiFE5Qw5m+pL+g/Xenrg26gwW6kQYh+dWE3FxPHlAJ7EhixCiMq5jwTSf4V0AN3A79A0QIhKGXa2
        1JMlBwA2Z9HhICEqY6uzJS/4dACPoqAgISrlbjwm3fXpAHqA61BQkBDlMuBsqMfXDWo9f4EbUaYgIcrl
        XmdD3qjz/AV6sBNMrwCa1Z5CTJou4DI8H7GvC/BFngLqgVPdVQixf/YAVwLfpMLaf9XgAAaxHGZDwAuB
        JrWvEBPSA1wFfJEAOTbrAn2pvcCdwCrgUGAeUKO2FmIfw1i6r8uBrxEowW4aRrgEOB94DXA0MAP/i5FC
        VKvR78AK7F4H/Ax4OuQDpPkWngUcBZwAHOOcwaHATKBVTkHkkB5n8Kuwvf2HsRJfj5Bwoo8sOIA4tcA0
        5xQOc87gaOBI4BDnFKYCjepDIgMMYqdin8PSeD2BVc56DIvp34blzhxM+0GreR5eh40E2oCDgMOBI9z1
        MGCR+/9T0GhBpMMwdkS3FwvZfcrJk9hQ/hmsZmYPCWfyKYIDmIhmZ/gd2OhgCbAYOBibQizARgtT0baj
        SM7Qe52xb8WG8Kucka92n7c4Q+/N0hfL00p8izP6Wc4hLMFGCkuw0cICbJrRjI0a6nL03UUy7HJG3o0V
        ulmPZeFZ64x8DXY2v9dJ5k+7FmErrtk5hynAXOcIDsJGDAvdz4uA2e7fNaORQ14ZdEbej83BN8QkMvjV
        WP69Hvdvc13vsuh78Y0x59DOyEihw0k7MJ/Ro4cmFMxUreyOSTRc3+KMeyOwKWboW7G3eOQQComCcSam
        1hl6NGWY7ZzCXOcYIpnrZDa2NtEYkybpOBEGnFHvcdce4FlnxJ2xa2fM6J+NGXc/VboIJweQbeoZGRE0
        OUcxE1uHmA3McTITC3iKS5v7nQb3d+KS112NYWeIA1h06EDMuHdie+Rx6cK20p7Dts62YavqXYx+2+vI
        uRxA1eu5ARsVNDhpwqYVbe7a6q7xz63YwmY0TWkZ83kato6R1oLmIDakjs+X+8Z87nX/vzt27Y793OWM
        P3rD743JkLqOHEDR26feGfhYqcF2O/4HW6dIg03AecA6Z6xD2Bt9cIzIkKsUrXZXN8OMvA3Ho4F0o8kG
        nRNQCviMogg6tZ/6kDqQEEIOQAghByCEkAMQQuQc7QKUT3TisIWR1fh45Flhw0s90eR0HQVd1WC7I7ux
        WAPpWw7AO7OAFwEvAY7HjiPPwvblh7CAlk5GYs/jsonnR7CpduJoA4/OWkxj5AzGWGkHpjud78aiA58B
        VgJ3uOtOqXNyKBBocswBXgu8CctsPL2E3+1nJDJuOyMx62MlCnPdiUXExWWivf75WPm1RSnpZT3wYsy5
        jUcdIxGQkUSZn+Yw+kxFXGZj0Y7RSc7Jsh0rpfUj4AYshFjIAZRNLXAW8HHgdPykJIti4aOY9j4sDn67
        k+fczzsZHUbbhU1BvuGMJg06gXdjQ/AopDmS6diZh+hsRHSdEnMGvo5e9wO3AF8Afo9GWqIMmoFLsOH7
        cJXIEDYi6GPkoMxgis8z6JzUDucEdrtnrBZ9rQPeh45vixJpAT7NSNYXSXalG/gkKk0nJkkdcCn2lpUB
        5UN6gQ+jNHBiErwaSyohw8mXdAKvUvcW++MgrISZDCaf8gfS2zGpShQJOJoLsW0tkU9OBt4sNcgBjMdi
        bJ9fOsl3f38TNtIT6uyjOBtYKjXknqNcWws5gH00YgE/DVJFIdr6TFRnUg4gxkxgudRQGF7k2lwOQCoA
        7JDJPKmhMMxzbS4HIBXs6xCKFCsOzcjhywHEmIaORheJeqzmghyAVADotJjaXA6g0HSj2nFFYsC1uRyA
        VABYQotcl4EWo9jFxElM5AAK6gA2SA2FYQOwWWqQA4jYDtwjNRSGe1ybywFIBYDNCW9BmWWLQD9wM1rz
        kQMYw63AA1JD7nkQuE1qkAMYy2bg+0xciVdkn73A99D8X0zAXOA3KHFGXuU3WDpyISbkdGC1jCV3ssa1
        rYihJInPZw22QnwGpRWlENXLdqy2w/VShZgM9cDfouSgeZCtwMXorIcokTrgfOARGVFm5VHgDWikKyrg
        WOC7WPUbGVU2ZAe22n+8uu/+UW3AyTEFSyP1N1jqsPnorVJtDABbgNuBH2JxHX1SixxAkjQBRwKnYG+X
        w7E88zMZqWSrxCJ+2cPoasvrgaewsuB3Ak+iiE45gADUYkklWrBKuPOAhc4hHOR+7nAywzmPZndVANb4
        DGEFRvvddQf2Vt+CBe9swoq1bsQO9Gx3jqDH/a6QA6gavTbHjL4t5gzmYsEoc4DZsc8znTNpxLITN7jP
        WXcWUUXjvU6iN/hzwDYnz8Y+b40ZfVfMGfSjJB5yADnTfZMz8kb3eRo2WpgZu7a5/x5Ja+w6xTmNFucw
        6pzDGE9qYu1dM07bD8cMLPo8NIEMOmPehc2zo7dwd+waSVTGfEfs2u2Meo+T3TJuOQBx4LZqwPazI6mL
        SfMYZxA5lobYNRpN1PP8kcUQIyfkhhh5W++NGWpk9LuwN/JgTAZislcGLYQQQgghhBBCCCGEEEIIIYQQ
        QgghhBBCCOGb/wdi5izTF5MqvwAAAABJRU5ErkJggg==
</value>
  </data>
</root>